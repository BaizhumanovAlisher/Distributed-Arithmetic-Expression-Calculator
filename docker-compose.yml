version: '3.8'

services:
  postgres:
    container_name: daec_postgresql
    image: postgres
    ports:
      - "8100:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: distributed_calculator
    networks:
      - app_network
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    restart: unless-stopped
    container_name: daec_redis
    image: redis:latest
    ports:
      - '8101:6379'
    networks:
      - app_network

  api_server:
    restart: unless-stopped
    container_name: daec_api_server
    image: api_server:latest
    build:
      dockerfile: api_server/Dockerfile
    depends_on:
      - postgres
      - redis
      - auth_service
      - expression_solver
    network_mode: host

  auth_service:
    restart: unless-stopped
    container_name: daec_auth_service
    image: auth_service:latest
    build:
      dockerfile: auth_service/Dockerfile
    depends_on:
      - postgres
    network_mode: host

  expression_solver:
    restart: unless-stopped
    container_name: daec_expression_solver
    image: expression_solver:latest
    build:
      dockerfile: expression_solver/Dockerfile
    depends_on:
      - postgres
    network_mode: host


volumes:
  pgdata:

networks:
  app_network:
    driver: bridge